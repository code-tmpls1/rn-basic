{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport AppColorTemplate from \"./../../../styles/ColorConfig\";\nimport TabNavigationStyles from \"./TabNavigationStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigation = function TabNavigation(_ref) {\n  var tabMenu = _ref.tabMenu;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      tabBadgeActive = _useState2[0],\n      setTabBadgeActive = _useState2[1];\n\n  var TabIconProvider = function TabIconProvider(_ref2) {\n    var routeName = _ref2.routeName,\n        size = _ref2.size,\n        color = _ref2.color;\n    var tabInfo = tabMenu.filter(function (val) {\n      return val.name === routeName;\n    });\n    return _jsx(MaterialCommunityIcons, {\n      name: tabInfo[0].icon,\n      size: size,\n      color: color\n    });\n  };\n\n  return _jsx(Tab.Navigator, {\n    screenListeners: function screenListeners() {\n      return {\n        state: function state(e) {\n          setTabBadgeActive(tabMenu[e.data.state.index].name);\n        }\n      };\n    },\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n              size = _ref4.size;\n          return _jsx(TabIconProvider, {\n            routeName: route.name,\n            size: size,\n            color: color\n          });\n        },\n        tabBarInactiveTintColor: AppColorTemplate.GLOBAL_TMPL_COLOR2,\n        tabBarActiveTintColor: AppColorTemplate.GLOBAL_TMPL_COLOR1\n      };\n    },\n    children: tabMenu.map(function (tab) {\n      var tabScreenOptions = {\n        tabBarShowLabel: false,\n        tabBarLabelStyle: TabNavigationStyles.tabBarLabelStyle,\n        tabBarBadgeStyle: tabBadgeActive === tab.name ? TabNavigationStyles.tabBarBadgeActiveStyle : TabNavigationStyles.tabBarBadgeStyle\n      };\n\n      if (tab.badge !== undefined && tab.badge > 0) {\n        tabScreenOptions.tabBarBadge = tab.badge;\n      }\n\n      return _jsx(Tab.Screen, {\n        name: tab.name,\n        component: tab.component,\n        options: tabScreenOptions\n      }, tab.name);\n    })\n  });\n};\n\nexport default TabNavigation;","map":{"version":3,"names":["React","useState","createBottomTabNavigator","MaterialCommunityIcons","AppColorTemplate","TabNavigationStyles","Tab","TabNavigation","tabMenu","tabBadgeActive","setTabBadgeActive","TabIconProvider","routeName","size","color","tabInfo","filter","val","name","icon","state","e","data","index","route","tabBarIcon","tabBarInactiveTintColor","GLOBAL_TMPL_COLOR2","tabBarActiveTintColor","GLOBAL_TMPL_COLOR1","map","tab","tabScreenOptions","tabBarShowLabel","tabBarLabelStyle","tabBarBadgeStyle","tabBarBadgeActiveStyle","badge","undefined","tabBarBadge","component"],"sources":["/home/nellutlalnrao/Documents/git-projects/rn-projects/rn-basic/src/components/Navigation/Tab/TabNavigation.js"],"sourcesContent":["import React,{ useState } from \"react\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport AppColorTemplate from './../../../styles/ColorConfig';\nimport TabNavigationStyles from './TabNavigationStyles';\n\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigation = ({ tabMenu }) => {\n\n  const [ tabBadgeActive, setTabBadgeActive ] = useState(\"\");\n\n  const TabIconProvider = ({ routeName, size, color }) =>{\n    let tabInfo = tabMenu.filter((val)=>val.name===routeName);\n    return <MaterialCommunityIcons name={tabInfo[0].icon}\n            size={size} color={color} />\n  };\n  \n  return (\n        <Tab.Navigator \n        screenListeners={() => ({\n          state: (e) => {\n            setTabBadgeActive(tabMenu[e.data.state.index].name);\n          },\n        })}\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ color, size }) => {\n            return <TabIconProvider routeName={route.name} size={size} color={color} />\n          },\n          tabBarInactiveTintColor: AppColorTemplate.GLOBAL_TMPL_COLOR2,\n          tabBarActiveTintColor: AppColorTemplate.GLOBAL_TMPL_COLOR1,\n        })}>\n          {tabMenu.map((tab)=>{\n            let tabScreenOptions = {\n              tabBarShowLabel:false,\n              tabBarLabelStyle: TabNavigationStyles.tabBarLabelStyle,\n              tabBarBadgeStyle: (tabBadgeActive===tab.name)?\n                TabNavigationStyles.tabBarBadgeActiveStyle:\n                TabNavigationStyles.tabBarBadgeStyle\n            };\n            if(tab.badge!==undefined && tab.badge>0) { \n              tabScreenOptions.tabBarBadge =  tab.badge;\n            }\n            return (\n              <Tab.Screen \n                key={tab.name}\n                name={tab.name} \n                component={tab.component} \n                options={tabScreenOptions}/>);\n            })}\n          </Tab.Navigator>\n      );\n}\n\nexport default TabNavigation;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,sBAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,mBAAP;;AAEA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;;AAEA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,OAAiB;EAAA,IAAdC,OAAc,QAAdA,OAAc;;EAErC,gBAA8CP,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAQQ,cAAR;EAAA,IAAwBC,iBAAxB;;EAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,QAA+B;IAAA,IAA5BC,SAA4B,SAA5BA,SAA4B;IAAA,IAAjBC,IAAiB,SAAjBA,IAAiB;IAAA,IAAXC,KAAW,SAAXA,KAAW;IACrD,IAAIC,OAAO,GAAGP,OAAO,CAACQ,MAAR,CAAe,UAACC,GAAD;MAAA,OAAOA,GAAG,CAACC,IAAJ,KAAWN,SAAlB;IAAA,CAAf,CAAd;IACA,OAAO,KAAC,sBAAD;MAAwB,IAAI,EAAEG,OAAO,CAAC,CAAD,CAAP,CAAWI,IAAzC;MACC,IAAI,EAAEN,IADP;MACa,KAAK,EAAEC;IADpB,EAAP;EAED,CAJD;;EAMA,OACM,KAAC,GAAD,CAAK,SAAL;IACA,eAAe,EAAE;MAAA,OAAO;QACtBM,KAAK,EAAE,eAACC,CAAD,EAAO;UACZX,iBAAiB,CAACF,OAAO,CAACa,CAAC,CAACC,IAAF,CAAOF,KAAP,CAAaG,KAAd,CAAP,CAA4BL,IAA7B,CAAjB;QACD;MAHqB,CAAP;IAAA,CADjB;IAMA,aAAa,EAAE;MAAA,IAAGM,KAAH,SAAGA,KAAH;MAAA,OAAgB;QAC7BC,UAAU,EAAE,2BAAqB;UAAA,IAAlBX,KAAkB,SAAlBA,KAAkB;UAAA,IAAXD,IAAW,SAAXA,IAAW;UAC/B,OAAO,KAAC,eAAD;YAAiB,SAAS,EAAEW,KAAK,CAACN,IAAlC;YAAwC,IAAI,EAAEL,IAA9C;YAAoD,KAAK,EAAEC;UAA3D,EAAP;QACD,CAH4B;QAI7BY,uBAAuB,EAAEtB,gBAAgB,CAACuB,kBAJb;QAK7BC,qBAAqB,EAAExB,gBAAgB,CAACyB;MALX,CAAhB;IAAA,CANf;IAAA,UAaGrB,OAAO,CAACsB,GAAR,CAAY,UAACC,GAAD,EAAO;MAClB,IAAIC,gBAAgB,GAAG;QACrBC,eAAe,EAAC,KADK;QAErBC,gBAAgB,EAAE7B,mBAAmB,CAAC6B,gBAFjB;QAGrBC,gBAAgB,EAAG1B,cAAc,KAAGsB,GAAG,CAACb,IAAtB,GAChBb,mBAAmB,CAAC+B,sBADJ,GAEhB/B,mBAAmB,CAAC8B;MALD,CAAvB;;MAOA,IAAGJ,GAAG,CAACM,KAAJ,KAAYC,SAAZ,IAAyBP,GAAG,CAACM,KAAJ,GAAU,CAAtC,EAAyC;QACvCL,gBAAgB,CAACO,WAAjB,GAAgCR,GAAG,CAACM,KAApC;MACD;;MACD,OACE,KAAC,GAAD,CAAK,MAAL;QAEE,IAAI,EAAEN,GAAG,CAACb,IAFZ;QAGE,SAAS,EAAEa,GAAG,CAACS,SAHjB;QAIE,OAAO,EAAER;MAJX,GACOD,GAAG,CAACb,IADX,CADF;IAMC,CAjBF;EAbH,EADN;AAkCD,CA5CD;;AA8CA,eAAeX,aAAf"},"metadata":{},"sourceType":"module"}